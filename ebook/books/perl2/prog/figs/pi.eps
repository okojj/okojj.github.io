%!PS-Adobe-2.0 EPSF-1.2

%%Title: pi
%%Creator: FreeHand 9.0
%%CreationDate: 4/6/01 11:11 AM
%%BoundingBox: 0 0 7 6
%%FHPathName:MacRomano HD:Desktop Folder:pi
%ALDOriginalFile:MacRomano HD:Desktop Folder:pi
%ALDBoundingBox: -14 -48 526 636
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t=="^::eu!!!KqGQH&m$$;E^(&hel'=O!6!b%"1;KE;N
%:s8VLSA>onKB<mUeZ-!Q6J-(=YV'DDD5Va!"'15SN.>Xgs>,p+>_-47(TN8EP<*Qb2>:XSkX**_p)f)gN;q.g1`T_U8qu>>JH8t:P]`63*s0pd-n,)O$n(m^N\DY@NX@*=K"9H$jLhhSEH-@KSkK@:`8WH$oRZ&QrYT0]HkCRL5d(t>t*p$iQ(sgWZ_Ng;T;1S6eAHep<;I5Uc0n)V(Q6&]=PoO0/JgK$>Pag*RRsil*LGA:q7qgl=
%:aj3>HEQ_+iB$>sJZ?9K_N$L![2rUm^akQ9CQMRI>\)H/X5E1dCMmkSlmsmD/S29g(onN5?b$K<?jQ%>km-1AH=SeiPh6sF%hO9tI7;LIB,2ocb]i&[2Q7ST-F7PW%Fk)3U)s/'q`l9i)Ah;f=S@k[[G&1eH]X)t&W\Psji.j3Q3;5^3DH0[iErA"DLV0M+a;pQSX$$#C9nm<A@G(H!aCFuPEp5Xk"#3>hRDi3PaCda9l)B@b3)aCD
%:L5.Wt(lI95"*>;d-JOEEaU`2\J)`1b,.[=Y]?[9c5"T\7')Aj1dWn=lP4__BDuGbtA+sG*cK;H;!5mI4!<2i\_[iVb*/ESE"jX(\0G:-7ROGaAQ+Z>lP+4(E]j5O+`8a"-Ubn8^ME7l>,aIMPZ+G^#;:AB)DH`r92U7Oqk>N1aKTc<5T1U$84"^D0.(+0"1.06\XQ$0i86OGAnbp3(`2.nH.ffq-Am-cnI4ZK^9<0XLQq<R\*[MAs
%:CGBI"i]hT^4MI<"FNR$6Og;o^HY85@o?-1&GVa(&if;;3Vr+D(`&aIe)YJr\HS7:A76SY08u6Y@XgN)-`MJ=,hMVg`onfAV4t3TI5'\D"[G0Ii_,urEUsdtu4kWe"(<[Pt<17$G.IE>#9Gjp.g;J:0!bi:.Vc./2\Bl@b8M)=Xbbi7cgB'C!C23u1F-[)u\8#XdR\cFS.@7G+r0_XN:;Y*iMfC_1!JrAq;p`@R6c+g]ATSp)[B@5)
%:!S3)OZ6TJe!JNam'f_QI="n:o1K4[bN=139<]D,DT4;q7\Kk&h-esF:C>omm47cH%9fQZ42+tU)Z[*9SiL6fU;-7D@:h,5uBpl/.WlDp+.6PK/`XHkk<D1Hc!oK.ZD94MgL?=sI=p&6p:>k2#-)r\NiDCX'B*UJLd:j&`fT\p*,YA93jh!^R`'b]Z51WRl=CTEJ_s,mE6%4ac4dgOdGdr@:7F4L,)_dEQRI(;?"(+sohKq7Uf7D%8
%:>>m^s:ZAjnD0fu7@(iGk)8V&!2!`JsXj],GG6To2;3N+icmd\/[NNV4@Q6W`H5i&Mk7We#Wn^Iq'(.L8+ns[.=E$ma:*eTBD=/8>."Z(-PpDJoJ2t"5Oh$r]mfn);&EbLOKEqYt;U7Q/\!-J/[>"!.H'Jd0apT'_B?R,q2MRZh[%6_c-h:JOdE$&/X.B)XjUtgOV5.F&/2Le[5Xe"S>RW#?R0jg9enjTnU/k:er=5r%V5u.m/6\:s
%:W=`$mTHC:&eT7A!fal'iDH(qo$pA."Ip[uP.XId-rlJFoqN*O#\qdZZ$E]c=:U"NG7??c^]Vt@H,Q-T$iMWa70-Yg(%0&=nWr.%K^6]bpH3jLn;CcZ7Y>lR7dWTYt**+\8kR4ViSRM;2ks1Ade@Sl6f[7sbQK+Fk6TPcI4XSJbMjNsT'ur+j<MMIIppu+ImF?1khb>slF[0Zc@AT6)5*HJ7A).Jknb+#'/Rap0B3!&<9pJF9J%d-n
%:_[`F3G1FsGRMrom"j`SVl:"diF5nbFVQ$XpYL1G_1<!20d]!N^9@r]TZid.kO;<pqV5=nd_tp'KB-Vfi=X8*G7;l-79=M4jM(Y$1UPsO\:qDKs]P1oIc#K;sf&9!c`=J_c+H=gK*I=;o6tM&SSc_jb?TAP@c)X\:P]l8)2nn8((e3$c<`s^JiH`qQZ=p4!XQYIpKX^e]auZ*c%ao2!;8([3s*6Q'hIP%*X:fZW4Lk[H2el?E#>GHL
%:3nWEAAm@a8Al9F;+$5/@Gaik]e#MI!Ch+9/hXg_4dPfbRe:m,0\cKltHS)/WKed._g&Q3;n.hLUrUgRCjcA=nSoeUS2WeEK(3?4l68D&tTk<GUXK@/>N_pk<Ure>).g&M*Yt.uoX@u01^u]eIhb/(mP7toc[%=pp@!!$AILCaCA+O1N9r8<hj_=b#h(7J^e>u<A/9$Ofpi[F=aB_'i#e"7n*6iPg8L#sWcU^$$-ZClWhufjd\M`^h
%:bUb@p1T)mj;1CUZQ&UNnP>03"JSq&SbID9-WP!&U).2%uM`+]9Cp`CAV9ZBKeBV4*&$,JSJdA(:'oV*(X/44Z=n[(%SO607=R:`g"n+dp*).k6A$Dn./'2'cKeEC"7'D1M80sVOR-BZ)peYiTMeOUn2j-(b\*5g=AZ=I&1gjL]QcUe@55J[>oX7k+1baAN,hrq>[g!eKXc5aOP9Wd_Yl;R&cbbt%E!i`OU30m-2mBP(_.Thn9n&eP
%:bJi:(eiB+(b#.?=G<<uhiVVD[^mA*PraHY#fm'\DpC;'$/DEgd7%Xa]T^N^EncaH58BX3$3&7TY)q@P)fS?dWBa*19D<u\.I0#'6hqg)STWOJ[Cg\4".m?0G'6P75@\#o7D&VE>M$r;`Bo'5?PDHD(.`C(upgk=lT0uq%#A("L^Gje<i%\KaTA-EmgSiH[]P6Aq>XOtbC"3g+/26g]VU1biXu31Z=J+%L=/K,OHi,V^pROfc:M99K
%:Ke$hj0)B6IMVh'7^OjPYWR#X\,O2tE1.dONUGrouSSb@iEZV-[.WYD35(6KM\f6Z$F>k3T\f6Ine_JhNEhJooE.bLahn=A\''jZ>cGu#?jE(1kf5m\dNAU8F3$*^dc$f:6f(@3Ts-oPW"&mQRc?39M@^^JR4BZ.\RIV-q3NC-`m>JK#aAH.?DBSg*(kWNDgMDiQ_QcNlXFsb%;OY=Gn>)Pk^UL'`I'&)VO#=u)Y5.I[6MO_.OY2IK
%:Hl_sc^5>llEV8Xt@7:6V&P$dN2n)!uib?>T(_>Ig4Stsoq08*@U75+WF=P40XON'pP&m*r<%MP?Xea3.N.(%*Eu-HV+rb0DW*S&]^W.C=BH1crYFn*JBQMl$)q^Gm/5mc%,4b5O7[^\Cbe'Yq-bW)<$0t7-1j2RVGS;CYbk4pV-HDrrAH/"UEdSU/__nqF2e"jliWnI?'(J^+2?qm(@Zt9+BWH+16q4=(q9Fe&#PVm`"s6a3Z"R:R
%:krj'kGL25"9WP8IFr\])DH;]X'mQ6K=g>+L[&%"]&UNN*/AtT"A$RH$B?t6E\`;[SOdV]:_8u2Uk$U/,V6)TjBtb](Cc;?n6GRpfO$#Ll^D46:LU`o->PadH1SUQIY?ui@ou3C%Tc5n4`8_diHZa0!Y]ii]n-J)Cr-G3/pJ8bZGe)?^Ul6oPe(_U_Gn5,mH&:ON1i+>QP2URgMs_`/6&57[(RKFP+L?%q9n*Ck-/6P$"k.AEj0[;<
%:aTm$p.sFWo75/RX,4\7XbcTJ9ErA;9b/K&Ga%@?]pbrj<Q4pus@oK;IY;^aIN,@=WI4phB%\+2KT@"Eh#e&$R'%2P`-3<i"Gn)_'Dm&j7(OpMN'<Urm;5VHrV;(X\bGtlTKGpfal(Jj`QNta6cN0qn!c.C(@+R!oBMmkZ4.9%kC3b&!;le*!YQPK:ocM&gfS?(1Yt)V$`TZL3f=ICa'PSRZE[?l;7l\K[XNI?Ua(4L)*IO#oReh9Q
%:lXT7b"@'jmp_dX-7Lp3:H<fNl\h-:`(f+$VV.roh]ZX9N;Hgn37W">^rK`V=>E.];DPn2>'fZ"`0'DaPWUDL=mo.a/C!i3HE=T)6A=CrF_2:[=<=6u;.9.Q?nQ1tM$mkmV-2,TJ.+`[+1+<[Q,!dN5(5Sk:dhY''-h'bkMu,?W4bpK'cgO0t]BTClMei;\bRqC+CH1FRBM4RklUXi9;.ZDJMH)iEWO$s]mNpKH7^;NDS9r2_nJT2I
%:Ho"9T>TUZuj$]N*BIFi.o(Xa`oQf46"*u/M_TV7LH+Y\6bT4mM4[K'^mH7tS3HaEGHI*kkZ<$.0#mjcs;j@(Y>RqW0#,BZ%_TTn#qk`,FKWpK=ocBs+V.'AoBJ?@cMT#5ZhZ-C+?UL&'IqA@oQ'<8$i44F#MaHBW8Gi>33h9kO33CnAiCbG7D/F%5n+0VYk%ebt;R2N?(pl+n&'92_)@U0CG'Xg?mID?+b(&h=GLD^JNc!Qs>PnXk
%:D1oBdnQ4X*bZbru%7\%;B$Knl>9*3?>3YYU/,[+B_-d8`2,?ncIZRYPcOSRl9U^g+dQ(D!g$t-_+1V`KMd=ff-b94F]tlb3FhZfs8c6Ma#9:=j3aD-Z9M,ttV([Q`)"TJQV/LXU[Eqh>o<SP$0j7A]Yf'EeT'NGUS)CK?;!Y0_VqOg^Pbb[W_TgDO6XLg73MF0]VP_)-Y-ub[lgn/6Q"oXM-WF/J<E0D[8'SGhGr4"`$V>;P9V-lE
%:CI1$n#>I75=K/=7WmX+_X'$K^LkDs7.(hmJ2CHjFb@TQ+n\2+g'NRV]6BkQM%r`%c^l*FD^VS*<"g?ppGR^k:GBa4.iuS%=J&!/r-QKponJ?<-?2TsLG7WQ.%djLok02XWoE"C"#Pabs9()?2TBhiXA>YeuROjXUB*4E2gI.2b0"37hq=F*BcQA?<k57>8*<(,Z3Woqum,'PJiFi3=!ZqE$7VQ[M@:F%a!!0-$6tp.Q!!461rVc9Y
%:@<?'[Bl.D]!N/prFE2)5B)hrG:h=ZgE+NO$Bm+&XEbT%a!;9-+:L\'M@rq\NktP)uEbTE(!!(qO9PJQi!!(bJ6tp.Q!!%L<847B+87c4?AT@bNG=?=ZD.RU,!!06'9lNm;C&e6l7VQ[M6tLFLEbTK7DfPgX2*u+t@qu&FJ5frd<+06PAH2cL;gE4hDer*]@WGmtGlRk7:i^Jn9QP:U!CBV'De!?hF`M$n!"2(_6q2*4F8u<[E"Z&\
%:9PJBU:gnGG!(fOrCi=>P!!(>=Ble@r!*M]uFC>.Lj%W9WD.N\I<'teLFDl"mEc5Ff!%^HFF(o,RBl%Sc!-:SFASk+TF*%B^F@C"WD,>7kE(k=p!!"T;@<6-m9PJBU!!%jFBkMR/AH2au<,$5l6Z6dZE]*muG#NL.Ch6F`DfABkF8u>^;fHYs6Z6dZE]*mtVaklDA7]f^!4tp5H"D!r!A72WFD(XS7mh32Ch7*uDfPgXTgs-ADWXRN
%:F`7<\,scQlDg,#dFD(XS!!)HgVZCf=VZCf=VZCf=VZE.cVZE.cVZE.cVZE.cVZE.cVZE.cVZE.cVZE.cVZE.cVZE.bcN(oa`;mjW`;mjW`;mjW`;mjW`;n3a,lf4k,lf4k,lf4k,ll6lVZCf=VZCf=VZCf=VZCf=VZCf<cN)u*8H<i4huT_U])ZpQhuL@hF9$C_VZ>WUVZ==/F9(5"VZ==/F9(5"VZ==/F9(5"VZ==/F9(5"D*Rmu
%:VZ==/F9(>$/-+]1F9*uohuT_U])^.XVZ8:KirO<(VZ>`XJ,h,$VZ7)*VZEq$FoeKAJ,uPJirBGfXoW\HVZE[qirBGfXoW\HVZE[qirBGfXoW\HVZE[qirBGfXoW\HVZE[qirBGfXoW\HVZE[qirBGfXoW\HVZ8:LFoeK@/HL"qVZ8:LFoeK@irE$ZFo]hgirQ:_irJ!;F9'Vf'*-ql*s*;[2#uY:F9&3=irF0%VZCf=QiJZ;'[NW$
%:irJ<DirJ<DF9*uo/-+o7kl>f+/cftm/HG#8kl>f+/cb,9kl>f+/caf0T`M:rhuMd<VZ>`XVZ>`XVZ>`XVZ>`WklB`EVZ>WTMZDc;=TII^klB`DklB`DklB`DklB`EVZ>`XVZB6eirJ!;In"6_FCdjO@rGmh!<<*!rrPfcC<-5e
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if 
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get 32 sub 0 exch put 
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub 
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed { 
_NXLevel2 not { 
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
} if
} if
/md defed{ 
md type /dicttype eq { 
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if 
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf 
}ifelse
/privrectpath { 
4 -2 roll m
dtransform round exch round exch idtransform 
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed 
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
false setoverprint 
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
/printerRes 
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency} 
{GrayAngle GrayFrequency} 
{0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
}
ifelse
} bdf
/nextrelease defed { 
/languagelevel defed not { 
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max 
printerRes div 
gradfrequency mul 
round 
5 max 
min 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known 
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup} 
{dup} ifelse 
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def 
{ 
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall 
NF
}bdf
/MN{
1 index length 
/Len exch def 
dup length Len add 
string dup 
Len 
4 -1 roll 
putinterval 
dup 
0 
4 -1 roll 
putinterval 
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll 
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFJ{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCJ} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup 
hasfont 
not 
{ 
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFJ{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/GS {
dup 
hasfont 
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFK 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFK{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCK} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup 
hasfont 
not 
{ 
pop
/JCsm
hasfont 
{
/JCsm
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFK{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFK 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFTC 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFTC{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCTC} 
ifelse
}bdf
/FDFTC
{
dup 
hasfont 
not 
{ 
pop
/DFMing-Lt-HK-BF
hasfont 
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFTC{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFTC 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/fps{
currentflat 
exch 
dup 0 le{pop 1}if 
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
}loop 
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf

userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
/Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog

%%BeginSetup

AltsysDict begin
_bfh 

_efh 
end %. AltsysDict

%%EndSetup
AltsysDict begin 

/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
max max max 
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{ 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx 
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop 
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
1 pop 
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 2 lt {pop 2} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop 
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
AltsysDict /cvc 2 index put 
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor} ifelse }
ifelse
}bdf 
0 setseparationgray
/imgr {0 0 540 684 } def 
/bleed 0 def 
/clpr {0 0 540 684 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 

userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-14 -48 translate

/currentpacking defed{false setpacking}if 
/spots[

1 0 0 0 (Process Cyan) false newcmykcustomcolor

0 1 0 0 (Process Magenta) false newcmykcustomcolor

0 0 1 0 (Process Yellow) false newcmykcustomcolor

0 0 0 1 (Process Black) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
14.4 53.5488 m
14.4 52.6992 L
15.818 52.6992 L
15.9547 51.8046 16.023 50.9473 16.023 50.127 C
16.023 49.7245 15.9527 49.4356 15.8121 49.2598 C
15.6715 49.0878 15.4957 49.002 15.2848 49.002 C
15.1169 49.002 14.9704 49.0606 14.8453 49.1777 C
14.7204 49.2949 14.6404 49.4649 14.6051 49.6875 C
14.4 49.6875 L
14.4665 49.0703 14.615 48.6347 14.8453 48.3809 C
15.072 48.1271 15.3278 48.0002 15.6129 48 C
15.9176 48 16.1715 48.1388 16.3746 48.416 C
16.5779 48.6933 16.6793 49.2109 16.6793 49.9688 C
16.6793 50.4452 16.6051 51.3554 16.4566 52.6992 C
17.9801 52.6992 L
18.1013 50.6523 18.2478 49.3574 18.4195 48.8145 C
18.5915 48.2714 18.8279 48.0002 19.1285 48 C
19.2691 48 19.3863 48.0469 19.4801 48.1406 C
19.57 48.2344 19.6148 48.3516 19.6148 48.4922 C
19.6148 48.5936 19.5993 48.6815 19.568 48.7559 C
19.5251 48.8573 19.4334 49 19.2926 49.1836 C
19.0544 49.5 18.8885 49.832 18.7945 50.1797 C
18.6266 50.7733 18.5173 51.6132 18.4664 52.6992 C
18.7359 52.6992 L
19.0212 52.6992 19.234 52.6524 19.3746 52.5586 C
19.6013 52.418 19.8082 52.1836 19.9957 51.8555 C
20.2242 51.8555 L
20.0056 52.5311 19.7498 52.9979 19.4566 53.2559 C
19.234 53.4511 18.9216 53.5487 18.5191 53.5488 C
14.4 53.5488 L
f 
n
vmr
vmr
end
%%Trailer
