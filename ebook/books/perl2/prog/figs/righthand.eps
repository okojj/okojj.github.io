%!PS-Adobe-2.0 EPSF-1.2

%%Title: righthand
%%Creator: FreeHand 9.0
%%CreationDate: 4/6/01 10:08 AM
%%BoundingBox: 0 0 12 14
%%FHPathName:MacRomano HD:righthand
%ALDOriginalFile:MacRomano HD:righthand
%ALDBoundingBox: -14 -48 526 636
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Black
%%DocumentNeededResources: font ZapfDingbats
%%DocumentFonts: ZapfDingbats
%%DocumentNeededFonts: ZapfDingbats
%%EndComments
%%BeginAGDEmbeddedDoc: version 1.0
%:s8W,W5t=="^::eu!!!L-GQHW($[>Xi(&mrF2@gE%A<RHWbN,W4
%:s8VK/&Qb'o6";eZH2+=1!f0<2!C9"k8N(!3fj-KT!Mu/!YgoJe<c(.&Xjr_hIGb3CCKmplei$KEV-5CXMT(I]onAI\YM9*$gq.q%B(P!%B>="[m^MrGH(:9Ys#G/_bTq/FKDAW,0G4WlE5Rr?#qk9mO(=D,Qh;Xbre,%oH4WIL/n:Fkm]g9Fb">8?(]2")/1hDc>KTAHcK?V3*3G:^`Q=b1G8(YREQk45j$l7ANpB8tC[8gS'S'`K
%:5$LjAM=<UHcU$E``Q):LnNn(/S[2+(i^iE1Gal&1(7Z.Ul"Tj)hSDJ_,;UZb;c_blRJ37.p?XZ*pR\s)GT4![Na2M7U3@D:U3S\7)MWHV<o-]sQUdg5LuuBCFQ>uibRI^#a/iX_G4"!dR^]?@_8qSW>G%24]4K/t-I(:/**.2bH->V_]5uOuF56Wg@E&aejXksO,s?-72QUq\O3&9*Ob8PC?C+1R'kNT<'I-JTA=:873QPbr1]]Si
%:,A='q(l]0Zpb3IRW"kt+!R>.YYql-+D/!qdV+W)s/@"IkWn3I,Q7e:QX"UmK-pbFNC3.WAL=B>==<e@<ZW[>Dm%ofY&aJ<[;\b>23#ompFYq*J!feF]*aL(1g4LZ'AaV]]Akb%kJ%LqWdT"VE=d>l4gf;$^a:P@58g\[r4([Hr0s&%D_5)`8phpM=jW6,;[o#b3/CRP@Uo`RWAP,=gY2]?=!lV5;;QgcWoZblhY-PHGZC4sdC3\#&
%:2_U@E%_p,U8Vqrip1/1_IniV6SOu8('D'Kh`l]ea^WDs:LEGs2Ci\7cC*:pL!5BknVs05"2.b0aXZ/bGomUZAJXIjO;B0jbXQbE41j.HHZqf<8_1YeDAq(-,,#fnSf%Tj,V#mr97W[6sp+^Z'?Fhng\3.gKfmSE.8LC!-Z-Ac9OisPt&J#;H_R@\l3KpJo$Im:",$\TW"'Oh!aXg$Jf(/Ubku\p\j&(e-3.V*e3;6IT@aH:WHlrq]
%:`^qpI:0n$<?kcaA!K2KF+2\GUbP'a#=s=ATJo'I:^oS8G(\?flS5LtreBJ/@+h;po7'V@>H8V.1Lb%".?B&Uk-B,f!98,eH25V=Vp%1s-F-Vt^@c84:*oZZt3k7RL9$'!m)l6$3j;^QSrQPjQ"(L=_iDb^r1n]ui;%AK<K<%?/WL`!9CU>H--\GUa>7Y\k<$,<TW*-]6U<?<O.B5=dr!(^G']LFt@5hbUU7V^7i`,WL[jU)jSK;\(
%:Hr=qphocn;294n4BC]9Nf%F4a0OJZt7^-;6a[Yc:aY[#V4.VOf.7o==BWGl<?'&P70e?:/_p(c[Z\1,k/+,B/#kpaXOS`j'/3#YdPEDup/a`c/.#M?bPp@6P#W&IQK6-c:\N=M&+e5I?,t&TlOF#2<\..$4W%kaDi`06V<F3JfJ*=BdktEt\?>?]7XL0S6e"c[HjRsnZdE<fNei$5!i:^V_L)]q]K0<LsBLH$[mDoB7KS=e,P1GI/
%:_Ss$<<26g&Q(WS9EpIj$-L3R,XP\j0nY<=h.n35L;rS?hnm/"emigsROPhh41+Um0TW+UW)XaBR$>"R,7G3-R^87c*p46&4.Bu\7)*T)7_+4;O2REB"\-Abb,eb\7Y6!:rnCU73*Sa(U$[YG0g\#rBF%s6%Ki6cAd`Y=Q0^I>Yq$i3"^)OR7i;8VH)AqSVF(QK'hOO4mnV.0]p6;=uaJ5%SU+Tp=Jfej:"7Zmp=H]<lM^F<6]>E0Y
%:$HB[2_NF74_1\%DTNAr"$5g`lGe?C`V(+q(0fj\5DIG1'lh<sHRo'S(iS1*;ICG\fS"bXU#H?[/JC5:KLTug,a/-fMZoRa@9k6[GS=AtiWF`+hKp4NpeR=]Oa<@k%<Q`B1[M7^p6/0SKdVG:%:FE:m.910>[p&H4kEMa4KWg->7>a`6;3e\.(OC8<$\QcuE7S]g)$oV9O//s!bH#Q%(&H'0<]hSN6kTZm2I\[!/[*+i?-=pFG&JR;
%:NpI70\7G=c3)HpiX1$pJ6H=Ni`4L8].jddci0.oOs,U5%%gE]Weh4r'%&<5iIS][c-rBI_0YghW$u5-%9`:;Ss"aD5QfJUNj9+p<?EnO:H](iP]]M9I<hUr;0$@t(MH65>k#'O\`WI*B[pAVq3nLGlf:R8DarB1kI5JT<1+/iu2<eCYl[)A&T\8'E.W9R(''ao%257.@oOY@o[TIcc[8QEj[k9<cdPb%hAY*J0oH@+2HB-,aR[#4+
%:105lLCu>YcrSI*W(TPnm^;[SS/+5Ga*BBtU7l[%U)eYibZS<7(Lib9HZ$TtFbI(]AE=:o`<[QrS<qU-Mb8qoIR*2nnb?!U/,T_!t/Ui5+f_iNeerE6<TCL'RY"\`=Pc$>qUHITaY$]@>2V:.P+NlQ(@OM%bnuX_4#"?N&?"*=@X4\]a.9$u<?F-JQ#jiS54`r&\[ngujh@u85$:D?nEpaN^jrRC<UO+LgS,tqLpO7h*[.^h*27loq
%:/tG$X2:]SYQH1,2LPfgEM>hbh`7AUt1DK']F\Z51L^0hGHdni\:mX0hSc]HbMaV%NePA!\XQ3<^:q\?4C?@-Za4A!%fWg]IB/j]lg+K-`GG_;;N!"@=q[)i#E/0L_CL@USU'B2s-^GF\iA$U"\W>=naYk&9\\'?87+D@'=Jc\lWjZ'/`(kpJeIG!Xb0>A6E'j3'LP4k(,5ShYS!Fmi7lt`?.hS.3mMX-i-p`@6YVp?l5)U">9Qc[[
%:%m@aL>(29N?("ChZ^16:QhSsUfX:5EXBO97d)*2GV&$3q,V<7o/R2'j/[BX;3DXc2q.A_]$Fj0E%Z>Sci]S-LM)&r#M=(f_FQLqHD#B2$F>k8,k^McXd+q67De([c-4@D!$eIA]Gt..IGjA+7mBl=eP\224e[E5_(&b<qd(fC\6soZFoPXJ%IJ1oRIkt1+8/qCGoIt:e[]E\N5/n.Vfb<HX1D84aB^PEU4lcf7r`g[j?u.Qdet`f5
%:gL=M6(eMs7R5!D4Pu=N.Il/an[lP)_Y,$G)j78/8g&H(o]^:dlhEln1`]Yk[+Vdka#*d`\;:mQLgJc4=:g^e:BA_Hh)ZBs2/?j-EndcT6FDL'XJF:G:]T\lC<#QLrkjas:B+jl@-2,f5-#i_8WXGk_XmG$$.^HG8f?bS5e@@uH''A[iX"Bd%?LD:pBM$+S$@`LgPCs;6ig2-9%7o=o@67!S%fN@h;LCJ?@h%#J)LMQEi>-e]NETN$
%:GMl]XL@:!g8IX>hl3d7Z,gK(/iY&X#a"f+bcaTG2D3='+SF#W_lQl0tE?-ERM-o$,ELlI"?uO_.Y16ZMa(hVdbaU3To"`uqmHF!J71ua$I>MY+"l[f8%?P$&?KHRqOV@QbYlf41*b*I=m<"d<%sRjPl7d>.PICb62da6JR9Xstmco380-'B=;8b`j7RaKuCr>+?Q,P4a1auSaehu0^fU;IJLGPm]@U@(p@C7uW%nJ3b0V>"Z6J%k=
%:C#Ke*42+58hi%B[m3X<H_#;p-#7n$h:Ft-=Em..1Hr.(me2^IQmk3a\]=N[*GbZFH-W3ZSiDTKP#BYEScF]rlg8s!=6Rh6?R@tAEqnntu^=a2eqU@DS?U)@K3Ru><F[,L1rm]1-A)9o#13lt_F!f`]r_/SR!]Bn_E;,l_TK^E,?j%BNbBk81DXONl&l,6t.OCgT8++_llf&KliXr$c8+CX_L0kLs?fF(4ZjZ]lNMrL@m78F/d<m#L
%:6YWA?Wb5<Y'g<s;0$7!@H&m8&)&D45GSIpTfRoDYXD4)\5N.W]nO7_d1+>YU,3(:]AZ+%0Q*f1)BE+9\-d5&#,AAHnbR-;p7T++KT;9+q;;U2.f&)=coYt%<U62G9TGf<r.BI?-#YOe&_%Cm4`8>XSB@Mb5R3U.ueS(A8MIVdA15$F"V'r2MGT=K7ds)Wm<I+!meGUKa?-5BE(Wmi2Eu-T%jJpGg<1T[cU8gN("BDA"0i6D8QJ1ba
%:QFAAZ<%Z.OagG;A-XFd#7r56/i@NFF!F.>`nm_-.,SB#^N1@[roDUJC:5!W^H##$nT;;q*A,1Df+oa))i1j(.c/bceL^CQcl<Lo^OL[0dR4k@#>gO4C:[='`L]nPRDF_RV?]]EIRupgSF&#4f'N+sh`:iat(d6Y]_]28I\Y5<NS`I9^cOG'A%nA[U/*;Mg:s3Yh:2U?ee>ADDWQC_>e-6iXq529Y[OfH8$t>dV_QoaD"Tt1)N?a9Z
%:Q2ZYB[g'itq*-b"T%R;f\P5,gTCDP0rX,6Ufh6sGTt#TlN#DWJ$c;ndlY6NQRQt_r?r4pibna<L+!ObGf\oGg!b_%3U).`D^6<rb?">L*:\,RhrYOZkeJcaOa,-@SnUO7m=I8n"Q:Yd?`UZmbid$7B%/#pQUP12Z52RFJ92Ku@Kr&%F=DhtMF(:lGZ)P1BKjli`0ZM\PQ(+DSL3stDf@X?We.QG.DJj9(Rd@5UQKfCS"-(RuET@XU
%:ookY:iiMCf46#4$+tUR0,mhW>4)!=r6qd2)olYgTEopcZS5:EG.s01mb[<(]QhcsZhP71Y7hh\$+Ndlh*kAh.*ddAXre*Mr7D+;eGSu"I5.lLGGR^k:DtlEnJN*'FhSS#l#7'`NhS]5T_)"%*S%8EQ4MVKt!WFNuE"sPlDtTr5Z;U?F9p`tgd7L%b2O.g4b:Uknr0?c<b9)p@f)0?SHGlBUAJ"WuAcDe0<2+a?/cm*pN(.MtTt6\L
%:ART%aAH2b3<^^Y3F8u@a6t(1K<,$2\!!/ut;fm%oDJ&qM'2W7\F)Y]#FD5o07ri<S!!)^eE)0qXARff^!9m3VFE2)5B)hqi9h]8BF8u<q9gi]*F8u;j7S#pc@n:0>A7]c]!-^kJASl!rF8u?J=CuJlD#aU><_[O/@VPlCMahDsAOL*N@rc:&FDl1"!&[)ZDe!P_!JXQbG]Z8gDef=RJ5frd<+06PAH2a\<)[mZBl7P`!Z=p^(k8@r
%:D.7F"9PIsV@<-Vn!Cfn+DfABkF8u>.:i^JaARoq(AH2]<5t==4Df0Xs!?t?KEa`U$@;ol[!6%WGDIlXQF8u<_9PJBU<+06PAH2^%6Z6dZE]*mtcV/%oF8u;D6t(1G!!)%R:18!N!!#tcF`VYCD,>7k@fQK[6=FqL@n(0KC]FHV7;QOP9PJQi!!%+0Ch7H[Ec5njF*%B^/OEleBk'hNDIieJM+22lF`M$n!LQi#DKJ6aCi=>PcP)%+
%:!!.7AFEq\6:i^Jn9QP:U!HM+XDfe?bCi=>P!!&oeF_PAtErZ3P9OW3XEW?+m:gnHZ!!#MVDes6$@ruX0!!.dQAU&;`Ci<g!!!&]_Ec6)>!!"<2EcQ)B:gnHZ!!.jSAU&;aDesQ5D?'Y:!;lkq!HJ4=!HJ4=!HJ4=!LNnc!LNnc!LNnc!LNnc!LNnc!LNnc!LNnc!LNnc!LNnc!LNl5!6"rW!6"rW!6"rW!6"rW!6"rW!7(Wkj#dYY
%:!$qUk!$qUk!$qUk!7(\D!HJ4=!HJ4=!HJ4=!HJ4=!HJ1d!94&N!-A5!!N,q0!-A5!!4r5Q!-A4=!8mmU!4r5Q!8mmU!4r5Q!8mmU!4r5Q!8mmU!4r5Q!8mmU!4r5Q!N,qX!94&2!94*'!-A7J!N,sK!N,t$!JUS*!N,qX!"/h*!NlGI!Ik-Q!8mmY!6G7s!8mmU!4r6W!N,qX!It3K!"/h1!HnLA!N,qX!"/h1!HnLA!94%ed8S4^
%:!NlHH!N,sr!94%e!NlHH!N,sr!94%e!NlHH!N,sr!94%e!NlHH!N,sr!94%e!NlHH!N,oL!HnLA!%e4p!N,oL!HnLA!94&Y!HnIh!94*_!94(;!-A4e!>>Ik!ZqI]!&Xc:!-A4=!94'$!N,s=!LNj<!94(D!94(D!-A5o!%\-7!9jK*!A4Cn!%e38!9jK*!A4B:!9jK*!A4B1!20Fr!8mk;!N,qX!N,qX!N,qX!N,qX!9jLDaICR9
%:!N,qU!/gj;!*K<^!9jLD!9jLD!9jLD!9jLD!N,qX!N,rf!94(;!.RIS@<?'KARfXhAH;c1s8RNLa[]X(
%:~>
%%EndAGDEmbeddedDoc
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if 
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get 32 sub 0 exch put 
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub 
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed { 
_NXLevel2 not { 
/colorimage where {
userdict eq {
/_rci false def 
} if
} if
} if
} if
/md defed{ 
md type /dicttype eq { 
/colorimage where { 
md eq { 
/_rci false def 
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if 
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add 
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf 
}ifelse
/privrectpath { 
4 -2 roll m
dtransform round exch round exch idtransform 
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed 
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/` 
{ 
false setoverprint 
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1 
statusdict begin
/processcolors defed 
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
/printerRes 
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency} 
{GrayAngle GrayFrequency} 
{0 Width Height matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform 
dup mul exch dup mul add sqrt 72 exch div} 
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60} 
ifelse
}
ifelse
end
}
{
currentscreen pop exch 
}
ifelse
printerRes 300 max exch div exch 
2 copy 
sin mul round dup mul 
3 1 roll 
cos mul round dup mul 
add 1 add 
dup maxsteps gt {pop maxsteps} if 
dup minsteps lt {pop minsteps} if 
}
ifelse
} bdf
/nextrelease defed { 
/languagelevel defed not { 
/framebuffer defed { 
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps 
{
forcemaxsteps 
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max 
printerRes div 
gradfrequency mul 
round 
5 max 
min 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def 
/delta -0 def 
/frac -0 def 
/height -0 def 
/left -0 def 
/numsteps1 -0 def 
/radius -0 def 
/right -0 def 
/top -0 def 
/width -0 def 
/xt -0 def 
/yt -0 def 
/df currentflat def 
/tempstr 1 string def 
/clipflatness currentflat def 
/inverted? 
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def 
/tc2 [0 0 0 1] def 
/storerect{/top xdf /right xdf /bottom xdf /left xdf 
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known 
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{ 
/proc2 exch cvlit def /proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup} 
{dup} ifelse 
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{ 
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def 
{ 
exch dup 
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall 
NF
}bdf
/MN{
1 index length 
/Len exch def 
dup length Len add 
string dup 
Len 
4 -1 roll 
putinterval 
dup 
0 
4 -1 roll 
putinterval 
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll 
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFJ 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFJ{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCJ} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup 
hasfont 
not 
{ 
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont 
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFJ{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFJ 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/GS {
dup 
hasfont 
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFK 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFK{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCK} 
ifelse
}bdf
/hasfont
{
/resourcestatus where 
{
pop 
/Font resourcestatus
{ 
pop pop true
}
{ 
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup 
hasfont 
not 
{ 
pop
/JCsm
hasfont 
{
/JCsm
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFK{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFK 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 
/ourvec xdf 
256 string cvs 
(|______) anchorsearch
{pop 
cvn 
dup FDFTC 
exch 
1 index 
eq 
{
_bfh findfont _efh 
dup 
maxlength dict 
CD 
dup 
/FontName 
3 index 
put 
dup 
/Encoding ourvec put 
1 index 
exch 
definefont 
pop 
}
{exch pop} 
ifelse
}
{pop} 
ifelse
}bdf
/RFTC{ 
dup 
FontDirectory exch 
known 
{pop 3 -1 roll pop} 
{RCTC} 
ifelse
}bdf
/FDFTC
{
dup 
hasfont 
not 
{ 
pop
/DFMing-Lt-HK-BF
hasfont 
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse 
}
if
}bdf
/FFTC{
_bfh
dup 
256 string cvs 
(|______)exch MN 
cvn 
dup 
FontDirectory
exch known 
{ 
exch 
pop 
findfont 
3 -1 roll 
pop 
}
{ 
pop 
FDFTC 
dup findfont 
dup maxlength dict 
CD 
dup dup 
/Encoding exch 
/Encoding get 
256 array copy 
7 -1 roll 
{ 
3 -1 roll 
dup 
4 -2 roll 
put 
}forall
put 
definefont 
}
ifelse
_efh
}bdf
/fps{
currentflat 
exch 
dup 0 le{pop 1}if 
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} 
{exit} 
ifelse
}loop 
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf 
/W{/clipper load 100 clipflatness dup setflat fps}bdf

userdict begin /BDFontDict 29 dict def end
BDFontDict begin
/bu{}def
/bn{}def
/setTxMode{av 70 ge{pop}if pop}def
/gm{m}def
/show{pop}def
/gr{pop}def
/fnt{pop pop pop}def
/fs{pop}def
/fz{pop}def
/lin{pop pop}def
/:M {pop pop} def
/sf {pop} def
/S {pop} def
/@b {pop pop pop pop pop pop pop pop} def
/_bdsave /save load def
/_bdrestore /restore load def
/save { dup /fontsave eq {null} {_bdsave} ifelse } def
/restore { dup null eq { pop } { _bdrestore } ifelse } def
/fontsave null def
end
/MacVec 256 array def 
MacVec 0 /Helvetica findfont
/Encoding get 0 128 getinterval putinterval
MacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put
/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI
/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/US
MacVec 0 32 getinterval astore pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash 
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacVec 128 128 getinterval astore pop
/findheaderfont {
/Helvetica findfont 
} def
end %. AltsysDict
%%EndResource
%%EndProlog

%%BeginSetup

AltsysDict begin
_bfh 
%%IncludeResource: font ZapfDingbats
14 dict dup begin

128 /a89 def

129 /a90 def

130 /a93 def

131 /a94 def

132 /a91 def

133 /a92 def

134 /a205 def

135 /a85 def

136 /a206 def

137 /a86 def

138 /a87 def

139 /a88 def

140 /a95 def

141 /a96 def
end 
/f0 /ZapfDingbats FF def

_efh 
end %. AltsysDict

%%EndSetup
AltsysDict begin 

/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor { 
max max max 
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf 
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{ 
4 index 1 index get 0.3 mul 
4 index 2 index get 0.59 mul 
4 index 3 index get 0.11 mul 
4 index 4 index get 
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx 
6 -1 roll/exec cvx 
7 -1 roll/exec cvx 
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx 
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le 
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st 
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop 
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub 
1.0 dup im ik add min sub 
1.0 dup iy ik add min sub 
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll 
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll 
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll 
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq 
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf 
/setspotcolor { 
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf 
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def 
/_lfp4 {
1 pop 
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def 
/_lfs4 {
/yt xdf 
/xt xdf 
/ang xdf 
storerect
/taperfcn xdf
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
height abs adjnumsteps 
dup 2 lt {pop 2} if 
1 sub /numsteps1 xdf
currentflat mark 
currentflat clipflatness 
/delta top bottom sub numsteps1 1 add div def 
/right right left sub def 
/botsv top delta sub def 
{
{
W
xt yt translate 
ang rotate
xt neg yt neg translate 
dup setflat 
/bottom botsv def
0 1 numsteps1 
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat 
{ 
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf 
/tint1 xdf 
bcs exch 1 exch put 
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
tint1 tint2 sub abs 
bcs 1 get maxspot 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop 
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf 
/radius xdf 
/yt xdf 
/xt xdf 
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor 
calcgraysteps mul abs round 
radius inrad sub abs 
adjnumsteps 
dup 1 lt {pop 1} if 
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse 
2 div /halfstep xdf 
currentflat mark 
currentflat clipflatness 
{
{
dup setflat 
W 
0 1 numsteps1 
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat 
{ 
newpath mark 
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{ arc
radindex numsteps1 ne 
inrad 0 gt or 
{
xt yt 
numsteps1 0 eq
{ inrad } 
{ 
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn 
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def 
/vc{
AltsysDict /cvc 2 index put 
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor} ifelse }
ifelse
}bdf 
0 setseparationgray
/imgr {0 0 540 684 } def 
/bleed 0 def 
/clpr {0 0 540 684 } def 
/xs 1 def 
/ys 1 def 
/botx 0 def 
/overlap 0 def 
/wdist 18 def 
0 2 mul fhsetspreadsize 
0 0 ne {/df 0 def /clipflatness 0 def} if 
/maxsteps 256 def 
/forcemaxsteps false def 
/minsteps 0 def 

userdict begin /AGDOrigMtx matrix currentmatrix def end 
vms
-14 -48 translate

/currentpacking defed{false setpacking}if 
/spots[

1 0 0 0 (Process Cyan) false newcmykcustomcolor

0 1 0 0 (Process Magenta) false newcmykcustomcolor

0 0 1 0 (Process Yellow) false newcmykcustomcolor

0 0 0 1 (Process Black) false newcmykcustomcolor
]def

/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta2{ 
tempstr 2 index gsave exec grestore 
cwidth cheight rmoveto 
4 index eq{5 index 5 index rmoveto}if 
2 index 2 index rmoveto 
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow} 
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall} 
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 
setlinewidth vc newpath 
/ts{{false charpath stroke}ta}def exec 
xt setlinewidth}bdf 
/strk{/textopf currentoverprint def vc setoverprint
/ts{{false charpath stroke}ta}def exec 
textopf setoverprint
}bdf 
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
25.7088 60.9999 m
14.4 60.9999 L
14.4 48 L
25.7088 48 L
25.7088 60.9999 L
n
q
%%IncludeResource: font ZapfDingbats
{
f0 [12 0 0 12 0 0] makesetfont
14.4 51.4 m
0 0 32 0 0 (+) ts
}
true
[0 0 0 1]
sts
Q
false eomode
vmr
vmr
end
%%Trailer
%%DocumentNeededResources: font ZapfDingbats
%%DocumentFonts: ZapfDingbats
%%DocumentNeededFonts: ZapfDingbats
