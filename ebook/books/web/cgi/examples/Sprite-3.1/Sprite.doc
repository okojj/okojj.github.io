


SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



NAME
     Sprite - Perl 5.0 module to manipulate text delimited
     databases.

SYNOPSIS
         use Sprite;

         $rdb = new Sprite ();

         $rdb->set_delimiter ("Read", "::");
         $rdb->set_delimiter ("Write", "::");

         $rdb->set_os ("UNIX");

         $rdb->sql (<<Query);
             .
             .
             .
         Query

         $rdb->close ();
         $rdb->close ($database);


DESCRIPTION
     Here is a simple database where the fields are delimted by
     commas:

         Player,Years,Points,Rebounds,Assists,Championships
         ...
         Larry Joe Bird,12,28,10,7,3
         Michael Jordan,10,33,6,5,3
         Earvin Magic Johnson,12,22,7,12,5
         ...

     _N_o_t_e: The first line must contain the field names (case
     sensitive).

Supported SQL Commands
     Here are a list of the SQL commands that are supported by
     Sprite:

     _s_e_l_e_c_t - retrieves records that match specified criteria:

              select col1 [,col2] from database
                  where (cond1 OPERATOR value1)
                  [and|or cond2 OPERATOR value2 ...]

          The '*' operator can be used to select all columns.

          The _d_a_t_a_b_a_s_e is simply the file that contains the data.
          If the file is not in the current directory, the path



20/Jun/96              Last change: perl                        1






SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



          must be specified.

          Sprite does _n_o_t support multiple tables (or commonly
          knows as "joins").

          Valid column names can be used where [cond1..n] and
          [value1..n] are expected, such as:

          _E_x_a_m_p_l_e _1:

              select Player, Points from my_db
                  where (Rebounds > Assists)

          The following SQL operators can be used: =, <, >, <=,
          >=, <> as well as Perl's special operators: =~ and !~.
          The =~ and !~ operators are used to specify regular
          expressions, such as:

          _E_x_a_m_p_l_e _2:

              select * from my_db
                  where (Name =~ /Bird$/i)

          Selects records where the Name column ends with "Bird"
          (case insensitive). For more information, look at a
          manual on regexps.

     _u_p_d_a_t_e - updates records that match specified criteria.

              update database set (cond1 OPERATOR value1)[,(cond2 OPERATOR value2)...]*
                 where (cond1 OPERATOR value1)
                 [and|or cond2 OPERATOR value2 ...]

              * = This feature was added as of version 3.1.

          _E_x_a_m_p_l_e:

              update my_db
                  set Championships = (Championships + 1)
                  where (Player = 'Larry Joe Bird')

             update my_db
                  set Championships = (Championships + 1),
                      Years = (12)

                  where (Player = 'Larry Joe Bird')


     _d_e_l_e_t_e - removes records that match specified criteria:






20/Jun/96              Last change: perl                        2






SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



              delete from database
                  where (cond1 OPERATOR value1)
                  [and|or cond2 OPERATOR value2 ...]

          _E_x_a_m_p_l_e:

              delete from my_db
                  where (Player =~ /Johnson$/i) or
                        (Years > 12)


     _a_l_t_e_r - simplified version of SQL-92 counterpart
          Removes the specified column from the database. The
          other standard SQL functions for alter table are not
          supported:

              alter table database
                  drop column column-name

          _E_x_a_m_p_l_e:

              alter table my_db
                  drop column Championships


     _i_n_s_e_r_t - inserts a record into the database:

              insert into database
                  (col1, col2, ... coln)
              values
                  (val1, val2, ... valn)

          _E_x_a_m_p_l_e:

              insert into my_db
                  (Player, Years, Points, Championships)
              values
                  ('Kareem Abdul-Jabbar', 21, 27, 5)

          _N_o_t_e: You do not have to specify all of the fields in
          the database! Sprite also does not require you to
          specify the fields in the same order as that of the
          database.

          _N_o_t_e: You should make it a habit to quote strings.

METHODS
     Here are the four methods that are available:

     _s_e_t__d_e_l_i_m_i_t_e_r
          The set_delimiter function sets the read and write
          delimiter for the the SQL command. The delimiter is not



20/Jun/96              Last change: perl                        3






SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



          limited to one character; you can have a string, and
          even a regexp (for reading only).

          _R_e_t_u_r_n _V_a_l_u_e

          None

     _s_e_t__o_s
          The set_os function can be used to notify Sprite as to
          the operating system that you're using. Valid arguments
          are: "UNIX", "VMS", "MSDOS", "NT" and "MacOS". UNIX is
          the default.

          _R_e_t_u_r_n _V_a_l_u_e

          The previous OS value

     _s_q_l  The sql function is used to pass a SQL command to this
          module. All of the SQL commands described above are
          supported. The _s_e_l_e_c_t SQL command returns an array
          containing the data, where the first element is the
          status. All of the other other SQL commands simply
          return a status.

          _R_e_t_u_r_n _V_a_l_u_e
              1 - Success
              0 - Error

     _c_l_o_s_e
          The close function closes the file, and destroys the
          database object. You can pass a filename to the
          function, in which case Sprite will save the database
          to that file.

          _R_e_t_u_r_n _V_a_l_u_e

          None

EXAMPLES
     Here are two simple examples that illustrate some of the
     functions of this module:

     _E_x_a_m_p_l_e _1

         #!/usr/local/bin/perl5

         use Sprite;

         $rdb = new Sprite ();






20/Jun/96              Last change: perl                        4






SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



         # Sets the read delimiter to a comma (,) character. The delimiter
         # is not limited to one character; you can have a string, or even
         # a regexp.

         $rdb->set_delimiter ("Read", ",");

         # Retrieves all records that match the criteria.

         @data = $rdb->sql (<<End_of_Query);

             select * from /shishir/nba
                 where (Points > 25)

         End_of_Query

         # Close the database and destroy the database object (i.e $rdb).
         # Since we did not pass a argument to this function, the data
         # is not updated in any manner.

         $rdb->close ();

         # The first element of the array indicates the status.

         $status = shift (@data);
         $no_records = scalar (@data);

         if (!$status) {
             die "Sprite database error. Check your query!", "\n";
         } elsif (!$no_records) {
             print "There are no records that match your criteria!", "\n";
             exit (0);
         } else {
             print "Here are the records that match your criteria: ", "\n";

             # The database returns a record where each field is
             # separated by the "\0" character.

             foreach $record (@data) {
                 $record =~ s/\0/,/g;
                 print $record, "\n";
             }
         }


     _E_x_a_m_p_l_e _2

         #!/usr/local/bin/perl5

         use Sprite;

         $rdb = new Sprite ();
         $rdb->set_delimiter ("Read", ",");



20/Jun/96              Last change: perl                        5






SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



         # Deletes all records that match the specified criteria. If the
         # query contains an error, Sprite returns a status of 1.

         $rdb->sql (<<Delete_Query)
                     || die "Database Error. Check your query", "\n";

             delete from /shishir/nba
                 where (Rebounds <= 5)

         Delete_Query

         # Access the database again! This time, select all the records that
         # match the specified criteria. The database is updated *internally*
         # after the previous delete statement.

         # Notice the fact that the full path to the database does not
         # need to specified after the first SQL command. This
         # works correctly as of version 3.1.

         @data = $rdb->sql (<<End_of_Query);

             select Player from nba
                 where (Points > 25)

         End_of_Query

         # Sets the write delimiter to the (:) character, and outputs the
         # updated information to the file: "nba.new". If you do not pass
         # an argument to the close function after you update the database,
         # the modified information will not be saved.

         $rdb->set_delimiter ("Write", ":");
         $rdb->close ("nba.new");

         # The first element of the array indicates the status.

         $status = shift (@data);
         $no_records = scalar (@data);

         if (!$status) {
             die "Sprite database error. Check your query!", "\n";
         } elsif (!$no_records) {
             print "There are no records that match your criteria!", "\n";
             exit (0);
         } else {
             print "Here are the records that match your criteria: ", "\n";

             # The database returns a record where each field is
             # separated by the "\0" character.






20/Jun/96              Last change: perl                        6






SPRITE(1)      User Contributed Perl Documentation      SPRITE(1)



             foreach $record (@data) {
                 $record =~ s/\0/,/g;
                 print $record, "\n";
             }
         }


ADVANTAGES
     Here are the advantages of Sprite over mSQL by David Hughes
     available on the Net:

     Allows for column names to be specified in the update
     command:

     Perl's Regular Expressions allows for powerful pattern
     matching

     The database is stored as text. Very Important! Information
     can be added/modified/removed with a text editor.

     Can add/delete columns quickly and easily

DISADVANTAGES
     Here are the disadvantages of Sprite compared to mSQL:

     _S_p_e_e_d. No where close to mSQL! Sprite was designed to be
     used to manipulate very small databases (~1000-2000
     records).

     Does not have the ability to "join" multiple tables
     (databases) during a search operation. This will be added
     soon!

RESTRICTIONS
     1    If a value for a field contains the comma (,) ch                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               